/* tslint:disable */
/* eslint-disable */
/**
 * MONEI API v1
 * The MONEI API is organized around [REST](https://en.wikipedia.org/wiki/Representational_State_Transfer) principles. Our API is designed to be intuitive and developer-friendly.  ### Base URL  All API requests should be made to:  ``` https://api.monei.com/v1 ```  ### Environment  MONEI provides two environments:  - **Test Environment**: For development and testing without processing real payments - **Live Environment**: For processing real transactions in production  ### Client Libraries  We provide official SDKs to simplify integration:  - [PHP SDK](https://github.com/MONEI/monei-php-sdk) - [Python SDK](https://github.com/MONEI/monei-python-sdk) - [Node.js SDK](https://github.com/MONEI/monei-node-sdk) - [Postman Collection](https://postman.monei.com/)  Our SDKs handle authentication, error handling, and request formatting automatically.  You can download the OpenAPI specification from the https://js.monei.com/api/v1/openapi.json and generate your own client library using the [OpenAPI Generator](https://openapi-generator.tech/).  ### Important Requirements  - All API requests must be made over HTTPS - If you are not using our official SDKs, you **must provide a valid `User-Agent` header** with each request - Requests without proper authentication will return a `401 Unauthorized` error  ### Error Handling  The API returns consistent error codes and messages to help you troubleshoot issues. Each response includes a `statusCode` attribute indicating the outcome of your request.  ### Rate Limits  The API implements rate limiting to ensure stability. If you exceed the limits, requests will return a `429 Too Many Requests` status code.  # Authentication  <!-- Redoc-Inject: <security-definitions> -->
 *
 * The version of the OpenAPI document: 1.6.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * Information related to the browsing session of the user who initiated the payment.
 * @export
 * @interface PaymentSessionDetails
 */
export interface PaymentSessionDetails {
  /**
   * The IP address where the operation originated.
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  ip?: string;
  /**
   * Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  countryCode?: string;
  /**
   * Two-letter language code ([ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1)).
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  lang?: string;
  /**
   * Device type, could be `desktop`, `mobile`, `smartTV`, `tablet`.
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  deviceType?: string;
  /**
   * Information about the device used for the browser session (e.g., `iPhone`).
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  deviceModel?: string;
  /**
   * The browser used in this browser session (e.g., `Mobile Safari`).
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  browser?: string;
  /**
   * The version for the browser session (e.g., `13.1.1`).
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  browserVersion?: string;
  /**
   * Operation system (e.g., `iOS`).
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  os?: string;
  /**
   * Operation system version (e.g., `13.5.1`).
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  osVersion?: string;
  /**
   * The source component from where the operation was generated (mostly for our SDK\'s).
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  source?: string;
  /**
   * The source component version from where the operation was generated (mostly for our SDK\'s).
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  sourceVersion?: string;
  /**
   * Full user agent string of the browser session.
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  userAgent?: string;
  /**
   * Browser accept header.
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  browserAccept?: string;
  /**
   * The color depth of the browser session (e.g., `24`).
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  browserColorDepth?: string;
  /**
   * The screen height of the browser session (e.g., `1152`).
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  browserScreenHeight?: string;
  /**
   * The screen width of the browser session (e.g., `2048`).
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  browserScreenWidth?: string;
  /**
   * The timezone offset of the browser session (e.g., `-120`).
   * @type {string}
   * @memberof PaymentSessionDetails
   */
  browserTimezoneOffset?: string;
}
